/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package homework1;

import java.awt.*;
import java.io.*;
import java.util.Arrays;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import javax.swing.*;

public class App {
    static JFrame frame;
    static int logNumber = 0;
    static FileWriter fw;
    static List<String> users = Arrays.asList("root", "ksamuel", "rarmstrong", "sdevAdmin");
    
    String currentUser = null;
    
    Boolean authenticated = false;

    String path = "C:/Users/kyras/OneDrive/Desktop/Code/UMGC/SDEV460/Homework1/app/src/main/logs/Log.txt";

    public String generateCode() {
      Random rand = new Random();
      return String.valueOf(rand.nextInt(999 - 100) + 999);
    }

    public boolean validateCode(String input, String code) {
      return input.equals(code);
    } 

    public boolean reauthenticate(String username) {
      JPanel panel = new JPanel(new GridLayout(3, 1));

      JLabel codeLbl = new JLabel("Enter 4-Digit Access Code");
      JTextField codeTextField = new JTextField();

      String code = generateCode();
      System.out.println("Access Code: " + code);

      JButton submitBtn = new JButton("Submit");
      submitBtn.addActionListener(ae -> {
        if (validateCode(codeTextField.getText(), code)) {
          currentUser = username;

          frame.remove(panel);
          frame.add(getMainPanel());
          frame.revalidate();
          frame.repaint();

          String message = "Successful login attempt. Username: " + username;
          createNewLog(message, path);
        } else {
          JOptionPane.showMessageDialog(null, "Invalid Code");
          codeTextField.setText("");
        }
      });

      panel.add(codeLbl);
      panel.add(codeTextField);
      panel.add(submitBtn);

      frame.add(panel);
      frame.revalidate();
      frame.repaint();
      
      return authenticated;
    }

    public static String createNewLog (String message, String path) {
      try{    
        String polishedLog = String.valueOf(logNumber) + ": " + new Date().toString() + " => " + message + "\n" ;

        fw = new FileWriter(path, true);    

        fw.write(polishedLog);
        fw.close();

        logNumber++;

        return message;     
      }catch(Exception e){
        System.out.println(e);
        return null;
      }    
    }

    public Boolean verifyPassword(String username, String password) {
      return users.contains(username) && password.equals("S3CR3Tp4ssw0rd");
    }

    public JPanel getMainPanel() {
      JPanel panel = new JPanel();
      JLabel welcomeMsg = new JLabel("Welcome, " + currentUser);

      panel.add(welcomeMsg, BorderLayout.CENTER);

      return panel;
    }

    public JPanel getLoginPanel () {
      JPanel panel = new JPanel(new GridLayout(3, 2));
      JLabel usernameLbl = new JLabel("Username");
      JLabel passwordLbl = new JLabel("Password");

      JTextField  usernameField = new JTextField(15); 
      JPasswordField passwordField = new JPasswordField();

      JButton loginBtn = new JButton("Login");
      loginBtn.addActionListener(ae -> {
        if (Boolean.TRUE.equals(verifyPassword(usernameField.getText().trim(), String.valueOf(passwordField.getPassword()).trim()))) {
          frame.remove(panel);
          
          reauthenticate(usernameField.getText().trim());
        } else {
          JOptionPane.showMessageDialog(null, "Invalid Username or Password");
          passwordField.setText("");

          String message = users.contains(usernameField.getText().trim()) ? "Unsuccessful login attempt. Username: " + usernameField.getText() : "Unauthorized login attempt. Username: " + usernameField.getText(); 
          createNewLog(message, path);
        }
      });
          
      JButton resetBtn = new JButton("Reset");
      resetBtn.addActionListener(ae -> {
        usernameField.setText("");
        passwordField.setText("");
      });

      panel.add(usernameLbl);
      panel.add(usernameField);

      panel.add(passwordLbl);
      panel.add(passwordField);

      panel.add(resetBtn);
      panel.add(loginBtn);

      return panel;
    }

    public static void setUpFrame() {
      frame = new JFrame();

      frame.add(new App().getLoginPanel(), BorderLayout.CENTER);
      frame.setTitle("HW1: Unit Testing");
      frame.setPreferredSize(new Dimension(450, 150));
      frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
      frame.pack();
      frame.setLocationRelativeTo(null);
      frame.setVisible(true);
    }

    public static void main(String[] args) {
      setUpFrame();
    }
}

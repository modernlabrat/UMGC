
function:	
	function_header_ optional_variables body ;

function_header_:	
	function_header |
  error ';' ;
	
function_header:	
	FUNCTION IDENTIFIER parameters RETURNS type ';' ;

optional_variables:
  optional_variables variable_ |
  ;

variable_:
  variable |
  error ';' ;

variable:
  IDENTIFIER ':' type IS statement_ ;

parameters:
  parameters parameter | 
  ;

parameter: 
  IDENTIFIER ':' type |
  IDENTIFIER ':' type ',' ;

type:
	INTEGER |
  REAL |
	BOOLEAN ;

body:
	BEGIN_ statement_ END ';' ;
	
statement:
	expression |
  IF expression THEN statements ELSE statements ENDIF  |
  CASE expression IS cases OTHERS ARROW statement_ ENDCASE |
	REDUCE operator reductions ENDREDUCE ;

statements:
  statements statement_ |
  statement_ ;
    
statement_:
	statement ';' |
	error ';';

cases:
  cases case |
  ;

case:
  WHEN INT_LITERAL ARROW statement_ ;

operator:
	ADDOP | MULOP | REMOP |  RELOP | NOTOP | OROP |  EXPOP ;

reductions:
	reductions statement_ ;

expression:
  expression OROP relation |
  logical ;

logical:
  expression ANDOP relation |
  relation ;

relation:
	relation RELOP term |
	term ;

term:
	term ADDOP factor |
	factor ;
      
factor:
	factor MULOP power |
  factor REMOP power |
  power
  ;

power:
  negate EXPOP power |
  negate ;

negate:
  NOTOP negate |
  primary

primary:
	'(' expression ')' |
	INT_LITERAL | REAL_LITERAL | BOOL_LITERAL |
	IDENTIFIER ;
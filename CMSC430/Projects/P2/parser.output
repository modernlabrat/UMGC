Nonterminals useless in grammar

    operator
    reductions


Terminals unused in grammar

    ENDREDUCE
    REDUCE


Rules useless in grammar

   48 statement: REDUCE operator reductions ENDREDUCE

   49 operator: ADDOP
   50         | MULOP
   51         | REMOP
   52         | RELOP
   53         | ANDOP
   54         | NOTOP
   55         | OROP
   56         | EXPOP

   57 reductions: reductions statement_


Grammar

    0 $accept: function $end

    1 function: function_header_ optional_variables body

    2 function_header_: function_header
    3                 | error ';'

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'

    5 optional_variables: optional_variables variable_
    6                   | ε

    7 variable_: variable
    8          | error ';'

    9 variable: IDENTIFIER ':' type IS statement_

   10 parameters: parameters parameter
   11           | ε

   12 parameter: IDENTIFIER ':' type
   13          | IDENTIFIER ':' type ','

   14 type: INTEGER
   15     | REAL
   16     | BOOLEAN

   17 body: BEGIN_ statement_ END ';'

   18 statement: expression
   19          | IF expression THEN statements ELSE statements ENDIF
   20          | CASE expression IS cases OTHERS ARROW statement_ ENDCASE

   21 statements: statements statement_
   22           | statement_

   23 statement_: statement ';'
   24           | error ';'

   25 cases: cases case
   26      | ε

   27 case: WHEN INT_LITERAL ARROW statement_

   28 expression: expression OROP logical
   29           | logical

   30 logical: logical ANDOP relation
   31        | relation

   32 relation: relation RELOP term
   33         | term

   34 term: term ADDOP factor
   35     | factor

   36 factor: factor MULOP power
   37       | factor REMOP power
   38       | power

   39 power: negate EXPOP power
   40      | negate

   41 negate: NOTOP negate
   42       | primary

   43 primary: '(' expression ')'
   44        | INT_LITERAL
   45        | REAL_LITERAL
   46        | BOOL_LITERAL
   47        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 43
    ')' (41) 43
    ',' (44) 13
    ':' (58) 9 12 13
    ';' (59) 3 4 8 17 23 24
    error (256) 3 8 24
    IDENTIFIER (258) 4 9 12 13 47
    INT_LITERAL (259) 27 44
    REAL_LITERAL (260) 45
    BOOL_LITERAL (261) 46
    ADDOP (262) 34
    MULOP (263) 36
    RELOP (264) 32
    ANDOP (265) 30
    REMOP (266) 37
    EXPOP (267) 39
    OROP (268) 28
    NOTOP (269) 41
    BEGIN_ (270) 17
    BOOLEAN (271) 16
    END (272) 17
    ENDREDUCE (273)
    FUNCTION (274) 4
    INTEGER (275) 14
    IS (276) 9 20
    REDUCE (277)
    RETURNS (278) 4
    IF (279) 19
    THEN (280) 19
    ELSE (281) 19
    ENDIF (282) 19
    ENDCASE (283) 20
    CASE (284) 20
    OTHERS (285) 20
    ARROW (286) 20 27
    WHEN (287) 27
    REAL (288) 15


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header_ (41)
        on left: 2 3
        on right: 1
    function_header (42)
        on left: 4
        on right: 2
    optional_variables (43)
        on left: 5 6
        on right: 1 5
    variable_ (44)
        on left: 7 8
        on right: 5
    variable (45)
        on left: 9
        on right: 7
    parameters (46)
        on left: 10 11
        on right: 4 10
    parameter (47)
        on left: 12 13
        on right: 10
    type (48)
        on left: 14 15 16
        on right: 4 9 12 13
    body (49)
        on left: 17
        on right: 1
    statement (50)
        on left: 18 19 20
        on right: 23
    statements (51)
        on left: 21 22
        on right: 19 21
    statement_ (52)
        on left: 23 24
        on right: 9 17 20 21 22 27
    cases (53)
        on left: 25 26
        on right: 20 25
    case (54)
        on left: 27
        on right: 25
    expression (55)
        on left: 28 29
        on right: 18 19 20 28 43
    logical (56)
        on left: 30 31
        on right: 28 29 30
    relation (57)
        on left: 32 33
        on right: 30 31 32
    term (58)
        on left: 34 35
        on right: 32 33 34
    factor (59)
        on left: 36 37 38
        on right: 34 35 36 37
    power (60)
        on left: 39 40
        on right: 36 37 38 39
    negate (61)
        on left: 41 42
        on right: 39 40 41
    primary (62)
        on left: 43 44 45 46 47
        on right: 42


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function          go to state 3
    function_header_  go to state 4
    function_header   go to state 5


State 1

    3 function_header_: error • ';'

    ';'  shift, and go to state 6


State 2

    4 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 7


State 3

    0 $accept: function • $end

    $end  shift, and go to state 8


State 4

    1 function: function_header_ • optional_variables body

    $default  reduce using rule 6 (optional_variables)

    optional_variables  go to state 9


State 5

    2 function_header_: function_header •

    $default  reduce using rule 2 (function_header_)


State 6

    3 function_header_: error ';' •

    $default  reduce using rule 3 (function_header_)


State 7

    4 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    $default  reduce using rule 11 (parameters)

    parameters  go to state 10


State 8

    0 $accept: function $end •

    $default  accept


State 9

    1 function: function_header_ optional_variables • body
    5 optional_variables: optional_variables • variable_

    error       shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BEGIN_      shift, and go to state 13

    variable_  go to state 14
    variable   go to state 15
    body       go to state 16


State 10

    4 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'
   10 parameters: parameters • parameter

    IDENTIFIER  shift, and go to state 17
    RETURNS     shift, and go to state 18

    parameter  go to state 19


State 11

    8 variable_: error • ';'

    ';'  shift, and go to state 20


State 12

    9 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 21


State 13

   17 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    IF            shift, and go to state 28
    CASE          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 31
    statement_  go to state 32
    expression  go to state 33
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 14

    5 optional_variables: optional_variables variable_ •

    $default  reduce using rule 5 (optional_variables)


State 15

    7 variable_: variable •

    $default  reduce using rule 7 (variable_)


State 16

    1 function: function_header_ optional_variables body •

    $default  reduce using rule 1 (function)


State 17

   12 parameter: IDENTIFIER • ':' type
   13          | IDENTIFIER • ':' type ','

    ':'  shift, and go to state 41


State 18

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 42
    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44

    type  go to state 45


State 19

   10 parameters: parameters parameter •

    $default  reduce using rule 10 (parameters)


State 20

    8 variable_: error ';' •

    $default  reduce using rule 8 (variable_)


State 21

    9 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 42
    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44

    type  go to state 46


State 22

   24 statement_: error • ';'

    ';'  shift, and go to state 47


State 23

   47 primary: IDENTIFIER •

    $default  reduce using rule 47 (primary)


State 24

   44 primary: INT_LITERAL •

    $default  reduce using rule 44 (primary)


State 25

   45 primary: REAL_LITERAL •

    $default  reduce using rule 45 (primary)


State 26

   46 primary: BOOL_LITERAL •

    $default  reduce using rule 46 (primary)


State 27

   41 negate: NOTOP • negate

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    negate   go to state 48
    primary  go to state 40


State 28

   19 statement: IF • expression THEN statements ELSE statements ENDIF

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    expression  go to state 49
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 29

   20 statement: CASE • expression IS cases OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    expression  go to state 50
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 30

   43 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    expression  go to state 51
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 31

   23 statement_: statement • ';'

    ';'  shift, and go to state 52


State 32

   17 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 53


State 33

   18 statement: expression •
   28 expression: expression • OROP logical

    OROP  shift, and go to state 54

    $default  reduce using rule 18 (statement)


State 34

   29 expression: logical •
   30 logical: logical • ANDOP relation

    ANDOP  shift, and go to state 55

    $default  reduce using rule 29 (expression)


State 35

   31 logical: relation •
   32 relation: relation • RELOP term

    RELOP  shift, and go to state 56

    $default  reduce using rule 31 (logical)


State 36

   33 relation: term •
   34 term: term • ADDOP factor

    ADDOP  shift, and go to state 57

    $default  reduce using rule 33 (relation)


State 37

   35 term: factor •
   36 factor: factor • MULOP power
   37       | factor • REMOP power

    MULOP  shift, and go to state 58
    REMOP  shift, and go to state 59

    $default  reduce using rule 35 (term)


State 38

   38 factor: power •

    $default  reduce using rule 38 (factor)


State 39

   39 power: negate • EXPOP power
   40      | negate •

    EXPOP  shift, and go to state 60

    $default  reduce using rule 40 (power)


State 40

   42 negate: primary •

    $default  reduce using rule 42 (negate)


State 41

   12 parameter: IDENTIFIER ':' • type
   13          | IDENTIFIER ':' • type ','

    BOOLEAN  shift, and go to state 42
    INTEGER  shift, and go to state 43
    REAL     shift, and go to state 44

    type  go to state 61


State 42

   16 type: BOOLEAN •

    $default  reduce using rule 16 (type)


State 43

   14 type: INTEGER •

    $default  reduce using rule 14 (type)


State 44

   15 type: REAL •

    $default  reduce using rule 15 (type)


State 45

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 62


State 46

    9 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 63


State 47

   24 statement_: error ';' •

    $default  reduce using rule 24 (statement_)


State 48

   41 negate: NOTOP negate •

    $default  reduce using rule 41 (negate)


State 49

   19 statement: IF expression • THEN statements ELSE statements ENDIF
   28 expression: expression • OROP logical

    OROP  shift, and go to state 54
    THEN  shift, and go to state 64


State 50

   20 statement: CASE expression • IS cases OTHERS ARROW statement_ ENDCASE
   28 expression: expression • OROP logical

    OROP  shift, and go to state 54
    IS    shift, and go to state 65


State 51

   28 expression: expression • OROP logical
   43 primary: '(' expression • ')'

    OROP  shift, and go to state 54
    ')'   shift, and go to state 66


State 52

   23 statement_: statement ';' •

    $default  reduce using rule 23 (statement_)


State 53

   17 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 67


State 54

   28 expression: expression OROP • logical

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    logical   go to state 68
    relation  go to state 35
    term      go to state 36
    factor    go to state 37
    power     go to state 38
    negate    go to state 39
    primary   go to state 40


State 55

   30 logical: logical ANDOP • relation

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    relation  go to state 69
    term      go to state 36
    factor    go to state 37
    power     go to state 38
    negate    go to state 39
    primary   go to state 40


State 56

   32 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    term     go to state 70
    factor   go to state 37
    power    go to state 38
    negate   go to state 39
    primary  go to state 40


State 57

   34 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    factor   go to state 71
    power    go to state 38
    negate   go to state 39
    primary  go to state 40


State 58

   36 factor: factor MULOP • power

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    power    go to state 72
    negate   go to state 39
    primary  go to state 40


State 59

   37 factor: factor REMOP • power

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    power    go to state 73
    negate   go to state 39
    primary  go to state 40


State 60

   39 power: negate EXPOP • power

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 30

    power    go to state 74
    negate   go to state 39
    primary  go to state 40


State 61

   12 parameter: IDENTIFIER ':' type •
   13          | IDENTIFIER ':' type • ','

    ','  shift, and go to state 75

    $default  reduce using rule 12 (parameter)


State 62

    4 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 4 (function_header)


State 63

    9 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    IF            shift, and go to state 28
    CASE          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 31
    statement_  go to state 76
    expression  go to state 33
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 64

   19 statement: IF expression THEN • statements ELSE statements ENDIF

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    IF            shift, and go to state 28
    CASE          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 31
    statements  go to state 77
    statement_  go to state 78
    expression  go to state 33
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 65

   20 statement: CASE expression IS • cases OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 26 (cases)

    cases  go to state 79


State 66

   43 primary: '(' expression ')' •

    $default  reduce using rule 43 (primary)


State 67

   17 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 17 (body)


State 68

   28 expression: expression OROP logical •
   30 logical: logical • ANDOP relation

    ANDOP  shift, and go to state 55

    $default  reduce using rule 28 (expression)


State 69

   30 logical: logical ANDOP relation •
   32 relation: relation • RELOP term

    RELOP  shift, and go to state 56

    $default  reduce using rule 30 (logical)


State 70

   32 relation: relation RELOP term •
   34 term: term • ADDOP factor

    ADDOP  shift, and go to state 57

    $default  reduce using rule 32 (relation)


State 71

   34 term: term ADDOP factor •
   36 factor: factor • MULOP power
   37       | factor • REMOP power

    MULOP  shift, and go to state 58
    REMOP  shift, and go to state 59

    $default  reduce using rule 34 (term)


State 72

   36 factor: factor MULOP power •

    $default  reduce using rule 36 (factor)


State 73

   37 factor: factor REMOP power •

    $default  reduce using rule 37 (factor)


State 74

   39 power: negate EXPOP power •

    $default  reduce using rule 39 (power)


State 75

   13 parameter: IDENTIFIER ':' type ',' •

    $default  reduce using rule 13 (parameter)


State 76

    9 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 9 (variable)


State 77

   19 statement: IF expression THEN statements • ELSE statements ENDIF
   21 statements: statements • statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    IF            shift, and go to state 28
    ELSE          shift, and go to state 80
    CASE          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 31
    statement_  go to state 81
    expression  go to state 33
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 78

   22 statements: statement_ •

    $default  reduce using rule 22 (statements)


State 79

   20 statement: CASE expression IS cases • OTHERS ARROW statement_ ENDCASE
   25 cases: cases • case

    OTHERS  shift, and go to state 82
    WHEN    shift, and go to state 83

    case  go to state 84


State 80

   19 statement: IF expression THEN statements ELSE • statements ENDIF

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    IF            shift, and go to state 28
    CASE          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 31
    statements  go to state 85
    statement_  go to state 78
    expression  go to state 33
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 81

   21 statements: statements statement_ •

    $default  reduce using rule 21 (statements)


State 82

   20 statement: CASE expression IS cases OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 86


State 83

   27 case: WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 87


State 84

   25 cases: cases case •

    $default  reduce using rule 25 (cases)


State 85

   19 statement: IF expression THEN statements ELSE statements • ENDIF
   21 statements: statements • statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    IF            shift, and go to state 28
    ENDIF         shift, and go to state 88
    CASE          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 31
    statement_  go to state 81
    expression  go to state 33
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 86

   20 statement: CASE expression IS cases OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    IF            shift, and go to state 28
    CASE          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 31
    statement_  go to state 89
    expression  go to state 33
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 87

   27 case: WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 90


State 88

   19 statement: IF expression THEN statements ELSE statements ENDIF •

    $default  reduce using rule 19 (statement)


State 89

   20 statement: CASE expression IS cases OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 91


State 90

   27 case: WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    IF            shift, and go to state 28
    CASE          shift, and go to state 29
    '('           shift, and go to state 30

    statement   go to state 31
    statement_  go to state 92
    expression  go to state 33
    logical     go to state 34
    relation    go to state 35
    term        go to state 36
    factor      go to state 37
    power       go to state 38
    negate      go to state 39
    primary     go to state 40


State 91

   20 statement: CASE expression IS cases OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 20 (statement)


State 92

   27 case: WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 27 (case)
